import telebot
from weather_api import get_weather_api
from telebot import types
import time

bot = telebot.TeleBot('5891154215:AAEc37wi9CZjsq5NGnC73MHVC7M9vugvdjs')


# The starting message of the bot || –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def start(message):
    smile_message = "‚õÖÔ∏è"
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name if message.from_user.last_name is not None else ''
    start_message = f'–ü—Ä–∏–≤–µ—Ç, <b>{first_name} {last_name}</b>. \n–ë–æ—Ç <b>Smokie</b> –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!'
    bot.send_message(message.chat.id, smile_message, parse_mode='html')
    bot.send_message(message.chat.id, start_message, parse_mode='html')
    q_message = "–ü–æ–≥–æ–¥—É –∏–∑ –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –º–Ω–µ –ø–æ–∫–∞–∑–∞—Ç—å?"
    bot.send_message(message.chat.id, q_message, parse_mode='html')

#  Display information about the weather || –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ
@bot.message_handler()
def get_weather(message):
    if message.content_type == 'text':
        # Send a user request to get an array of data and an image || –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É
        data = get_weather_api(message.text)
        if data is not None:
            # Separating the array elements for ease of understanding || –û—Ç–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–Ω–∏–º–∞–Ω–∏—è
            weather = data[0]
            icon = data[1]
            # Creating a button in which we pass two parameters || –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
            markup = types.InlineKeyboardMarkup()
            button_sub = types.InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', callback_data=f'sub {message.text}')
            markup.add(button_sub)
            # And create message || –ò —Å–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.send_photo(message.chat.id, icon)
            bot.send_message(message.chat.id, weather, parse_mode='html', reply_markup=markup)
            bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥—É –∏–∑ –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –º–Ω–µ –ø–æ–∫–∞–∑–∞—Ç—å?", parse_mode='html')
        # If get an error in the request, the function returns None || –ï—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º –æ—à–∏–±–∫—É –≤ –∑–∞–ø—Ä–æ—Å–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None
        if data is None:
            bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥', parse_mode='html')


# Subscription function is called every time at a user-defined time interval || –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏
def sub_weather(city, num, text):
    # Send a user request to get an array of data and an image || –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É
    data = get_weather_api(city)
    # I decided that the picture is unwanted here || –ü—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ, —á—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∑–¥–µ—Å—å –ª–∏—à–Ω—è—è
    weather = data[0]
    # Creating a button where the user selects a time interval || –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏
    markup = types.InlineKeyboardMarkup()
    unsub_button = types.InlineKeyboardButton(text='–û—Ç–ø–∏—Å–∞—Ç—å—Å—è', callback_data='unsub unsub')
    change_time_button = types.InlineKeyboardButton(text='–ß–∞—Å—Ç–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã', callback_data='time unsub')
    markup.add(unsub_button, change_time_button)
    bot.send_message(num, weather, parse_mode='html', reply_markup=markup)

# A function that catches button clicks || –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    # We divide the incoming string into an array of two elements, the first of which defines the function of the button, and the second the parameters that are necessary to perform this function, example req = ['sub', 'Paris']
    # || –ü—Ä–∏—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–æ–∫—É –¥–µ–ª–∏–º –Ω–∞ –º–∞—Å—Å–∏–≤ –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø–µ—Ä–≤—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–Ω–æ–ø–∫–∏, –∞ –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä req = ['sub', '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫']
    req = call.data.split()
    global town
    global sub
    seconds = 2 * 60 * 60
    # Subscription button || –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    if req[0] == 'sub':
        bot.send_message(call.message.chat.id, '–ö–∞–∂–¥—ã–µ –¥–≤–∞ —á–∞—Å–∞ —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–≥–æ–¥—É üò≥', parse_mode='html')
        town = req[1]
        sub = True
        print(req)
    # Unsubscribe button || –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø–∏—Å–∫–∏
    if req[0] == 'unsub':
        sub = False
        bot.send_message(call.message.chat.id, "–ü–æ–≥–æ–¥—É –∏–∑ –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –º–Ω–µ –ø–æ–∫–∞–∑–∞—Ç—å?", parse_mode='html')
        print(req)
    # Interval change button || –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    if req[0] == 'time':
        sub = False
        markup = types.InlineKeyboardMarkup()
        item1 = types.InlineKeyboardButton(text='2 —á–∞—Å–∞', callback_data='change 2')
        item2 = types.InlineKeyboardButton(text='4 —á–∞—Å–∞', callback_data='change 4')
        item3 = types.InlineKeyboardButton(text='6 —á–∞—Å–∞', callback_data='change 6')
        item4 = types.InlineKeyboardButton(text='24 —á–∞—Å–∞', callback_data='change 24')
        markup.add(item1, item2, item3, item4)
        bot.send_message(call.message.chat.id, "–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É?", parse_mode='html', reply_markup=markup)
        print(req)
    # Interval time selection button || –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    if req[0] == 'change':
        seconds = int(req[1]) * 60 * 60
        sub = True
        bot.send_message(call.message.chat.id, f"–Ø –±—É–¥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–π {req[1]} —á–∞—Å–∞", parse_mode='html')
        print(req)
    # Timer || –¢–∞–π–º–µ—Ä
    while sub:
        time.sleep(seconds)
        sub_weather(town, call.message.chat.id, call.message.text)
        print("Req:" + str(req) + '\nSeconds: ' + str(seconds))

if __name__ == '__main__':
    bot.polling(none_stop=True)
